// Code generated by "stringer -type TokenType token.go"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[LET-1]
	_ = x[IDENT-2]
	_ = x[ASSIGN-3]
	_ = x[INT-4]
	_ = x[SEMICOLON-5]
	_ = x[FUNCTION-6]
	_ = x[LPAREN-7]
	_ = x[COMMA-8]
	_ = x[RPAREN-9]
	_ = x[LBRACE-10]
	_ = x[PLUS-11]
	_ = x[RBRACE-12]
	_ = x[BANG-13]
	_ = x[MINUS-14]
	_ = x[SLASH-15]
	_ = x[ASTERISK-16]
	_ = x[LT-17]
	_ = x[LE-18]
	_ = x[GT-19]
	_ = x[GE-20]
	_ = x[IF-21]
	_ = x[RETURN-22]
	_ = x[TRUE-23]
	_ = x[ELSE-24]
	_ = x[FALSE-25]
	_ = x[STRING-26]
	_ = x[EQ-27]
	_ = x[NOT_EQ-28]
	_ = x[INVALID-29]
	_ = x[BLOCK-30]
	_ = x[EOF-31]
	_ = x[NIL-32]
	_ = x[RUNE-33]
	_ = x[LBRACKET-34]
	_ = x[RBRACKET-35]
	_ = x[COLON-36]
	_ = x[FOR-37]
	_ = x[BREAK-38]
	_ = x[CONTINUE-39]
}

const _TokenType_name = "NONELETIDENTASSIGNINTSEMICOLONFUNCTIONLPARENCOMMARPARENLBRACEPLUSRBRACEBANGMINUSSLASHASTERISKLTLEGTGEIFRETURNTRUEELSEFALSESTRINGEQNOT_EQINVALIDBLOCKEOFNILRUNELBRACKETRBRACKETCOLONFORBREAKCONTINUE"

var _TokenType_index = [...]uint8{0, 4, 7, 12, 18, 21, 30, 38, 44, 49, 55, 61, 65, 71, 75, 80, 85, 93, 95, 97, 99, 101, 103, 109, 113, 117, 122, 128, 130, 136, 143, 148, 151, 154, 158, 166, 174, 179, 182, 187, 195}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
